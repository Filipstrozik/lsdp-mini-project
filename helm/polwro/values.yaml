replicaCount: 1
imagePullPolicy: IfNotPresent
global:
  hostPathRoot: /Users/filipstrozik/Documents/studies/IIISEM/lsdp-mini-project/k3d/data

image:
  tag: latest
  repository: filipstrozik/lsdp

service:
  port: 8080

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  limits:
    cpu: 200m
    memory: 256Gi
  requests:
    cpu: 100m
    memory: 128Gi


# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

redis:
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      storageClass: local-path
      size: 1Gi

rabbitmq:
  auth:
    username: user
    password: password
  persistence:
    enabled: false
    storageClass: local-path
    size: 1Gi

# mongodb:
#   auth:
#     rootUser: root
#     rootPassword: example
#   persistence:
#     enabled: true
#     # storageClass: "-"
#     storageClass: local-path
#     size: 2Gi
#     # hostPath: "{{ tpl .Values.global.hostPathRoot . }}/mongodb"

mongodb:
  rootUsername: root
  rootPassword: password
  database: mydb
  image:
    repository: arm64v8/mongo
    pullPolicy: IfNotPresent
    tag: '6.0.8'
  service:
    type: ClusterIP
    port: 27017

prometheus:
  server:
    persistentVolume:
      enabled: true
      storageClass: local-path
      size: 2Gi

grafana:
  persistence:
    enabled: true
    type: hostPath
    path: "{{ tpl .Values.global.hostPathRoot . }}/grafana"
    accessModes:
      - ReadWriteOnce
    size: 1Gi
    storageClassName: "-"

rabbitmqHost: polwro-rabbitmq
redisHost: polwro-redis-master

celeryCommon:
  volumeRoot: "{{ tpl .Values.global.hostPathRoot . }}"

celeryBeat:
  extraWaitHost: "{{ tpl .Values.rabbitmqHost . }}"
  replicaCount: 1
  image:
    repository: filipstrozik/lsdp
    tag: "latest"
  scheduleFile: ""
  resources: {}

celeryWorker:
  extraWaitHost: "{{ tpl .Values.rabbitmqHost . }}"
  replicaCount: 1
  image:
    repository: filipstrozik/lsdp
    tag: "latest"
  resources: {}

persistence:
  enabled: true
  existingClaim: ""
  storageClass: "local-path"
  accessModes: ReadWriteOnce
  size: 1Gi